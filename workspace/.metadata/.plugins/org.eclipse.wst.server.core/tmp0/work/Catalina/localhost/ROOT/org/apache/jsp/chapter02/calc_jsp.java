/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.68
 * Generated at: 2021-06-30 00:06:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chapter02;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


public int add(int a, int b){return a + b;}
public int minus(int a, int b){return a - b;}
public int multi(int a, int b){return a * b;}


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write('\r');
      out.write('\n');

/*
	<request 기본 객체>
	1. 웹브라우저(클라이언트)가 웹 컨테이너(tomcat)(..웹 서버)에 전송한 요청 관련 정보 제공
	2.  JSP페이지에서 가장 많이 사용되는 기본 객체. 웹 브라우저의 요청과 관련이 있음
	3. 웹 브라우저에 웹 사이트의 주소를 입력하면, 웹 브라우저는 해당 웹 서버에 연결한 후  요청 정보를 전송. 이때 이 요청 정보를 제공
	4. 주요 기능
	- 클라이언트 (웹 브라우저)와 관련된 정보 읽기
	- 서버와 관련된 정보 읽기
	- 클라이언트가 전송한 요청 파라미터 읽기*******************
	- 클라이언트가 전송한요청 헤더 읽기
	- 클라이언트가 전송한 쿠키 읽기
	- 속성도 처리해줌
	
	
*/
// 	String firstStr = request.getParameter("a")==null?"0":request.getParameter("a");
// 	String sikStr = request.getParameter("sik")==null?"+":request.getParameter("sik");
// 	String secondstStr = request.getParameter("b")==null?"0":request.getParameter("b");
// 	int firstInt = Integer.parseInt(firstStr); 
// 	int secondInt = Integer.parseInt(secondstStr); 
// 	int resultInt = 0;
	
// 	if(sikStr.equals("+")){
// 		resultInt = add(firstInt,secondInt);
// 	}else if(sikStr.equals("-")){
// 		resultInt = minus(firstInt,secondInt);
// 	}else if(sikStr.equals("X")){
// 		resultInt = multi(firstInt,secondInt);
// 	}
		

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	table{\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		border-collapse: collapse;\r\n");
      out.write("	}\r\n");
      out.write("	td{\r\n");
      out.write("		width: 100px;\r\n");
      out.write("	}\r\n");
      out.write("	tr,td,th{\r\n");
      out.write("		border: 1px solid black;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	td input {\r\n");
      out.write("		padding: 30px 50px 30px 50px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"jquery-3.6.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function fncA(geta, getb) {\r\n");
      out.write("		console.log(geta + \",\" + getb);\r\n");
      out.write("		var vara = document.getElementById(\"a\");\r\n");
      out.write("		var varb = document.getElementById(\"sik\");\r\n");
      out.write("		var varc = document.getElementById(\"b\");\r\n");
      out.write("		if(varb.value == \"\"){\r\n");
      out.write("			if(getb == 0){\r\n");
      out.write("				vara.value = geta;\r\n");
      out.write("			}\r\n");
      out.write("		}else{\r\n");
      out.write("			varc.value = geta;\r\n");
      out.write("		}\r\n");
      out.write("		if(getb ==\"1\"){\r\n");
      out.write("			varb.value = geta;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function fn_chk() {\r\n");
      out.write("		var vara = document.getElementById(\"a\");\r\n");
      out.write("		var varb = document.getElementById(\"sik\");\r\n");
      out.write("		var varc = document.getElementById(\"b\");\r\n");
      out.write("		\r\n");
      out.write("		if(vara.value==\"\"){\r\n");
      out.write("			alert(\"첫번째 숫자를 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(varb.value==\"\"){\r\n");
      out.write("			alert(\"연산자를 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(varc.value==\"\"){\r\n");
      out.write("			alert(\"두번째 숫자를 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		return true; // submit 실행\r\n");
      out.write("	}\r\n");
      out.write("	function resProc() {\r\n");
      out.write("		document.getElementById(\"txtResult\").value = 0;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form name=\"frm\" id=\"frm\" method=\"get\" action=\"\" onsubmit=\"return fn_chk()\">\r\n");
      out.write("	<input type=\"hidden\" name=\"a\" id=\"a\" value=\"\">&nbsp;&nbsp;\r\n");
      out.write("	<input type=\"hidden\" name=\"sik\" id=\"sik\" value=\"\">&nbsp;&nbsp;\r\n");
      out.write("	<input type=\"hidden\" name=\"b\" id=\"b\" value=\"\">&nbsp;&nbsp;\r\n");
      out.write("<!-- 	<input type=\"hidden\" name=\"result\" id=\"result\" value=\"\">&nbsp;&nbsp; -->\r\n");
      out.write("	<br><br>\r\n");
      out.write("	\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th colspan=\"4\"><input type=\"text\" value=\"\" id=\"txtResult\" style=\"width: 90%; text-align: right;\"></th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><input type=\"button\" value=\"7\" onclick=\"fncA('7','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"8\" onclick=\"fncA('8','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"9\" onclick=\"fncA('9','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"X\" onclick=\"fncA('X','1')\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><input type=\"button\" value=\"4\" onclick=\"fncA('4','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"5\" onclick=\"fncA('5','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"6\" onclick=\"fncA('6','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"-\" onclick=\"fncA('-','1')\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><input type=\"button\" value=\"1\" onclick=\"fncA('1','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"2\" onclick=\"fncA('2','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"3\" onclick=\"fncA('3','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"+\" onclick=\"fncA('+','1')\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><input type=\"button\" value=\"\" onclick=\"\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"0\" onclick=\"fncA('0','0')\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"\" onclick=\"\"></td>\r\n");
      out.write("			<td><input type=\"button\" value=\"=\" onclick=\"resultProc()\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 	<button type=\"button\" onclick=\"resProc()\">리셋</button> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function resultProc() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"/chapter02/calcResult.jsp\"\r\n");
      out.write("			,type: \"get\"\r\n");
      out.write("			,data:$(\"#frm\").serialize()\r\n");
      out.write("			,dataType: \"json\"\r\n");
      out.write("			,success: function(data) {\r\n");
      out.write("				$(\"#txtResult\").val(data[\"result\"]);\r\n");
      out.write("				console.log(data[\"result\"]);\r\n");
      out.write("				$(\"#a\").val(\"\");\r\n");
      out.write("				$(\"#sik\").val(\"\");\r\n");
      out.write("				$(\"#b\").val(\"\");\r\n");
      out.write("			\r\n");
      out.write("			}\r\n");
      out.write("			,error: function(xhr){\r\n");
      out.write("				console.log(xhr);\r\n");
      out.write("				alert(\"오류입니다. 관리자에게 문의하세요.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
