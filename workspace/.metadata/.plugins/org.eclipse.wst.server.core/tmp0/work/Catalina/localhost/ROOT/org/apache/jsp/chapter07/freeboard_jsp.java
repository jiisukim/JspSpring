/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.68
 * Generated at: 2021-07-06 07:28:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chapter07;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class freeboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>자유게시판 목록</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table border=\"1\" style=\"width: 100%;\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/top.jsp", out, false);
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td style=\"width: 30%\" valign=\"top\">\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/left.jsp", out, false);
      out.write("		\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<table border=\"1\" style=\"width: 100%;\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"4\"><a href=\"/chapter07/freeboardwrite.jsp\">[게시글 쓰기]</a></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>번호</th>\r\n");
      out.write("					<th>제목</th>\r\n");
      out.write("					<th>작성자</th>\r\n");
      out.write("					<th>조회수</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");

String currentPageStr = request.getParameter("currentPage");
int currentPage = Integer.parseInt(currentPageStr);

//글 전체 개수
// select  COUNT(*) TOTAL FREEBOARD; => 120행
int total = 121;

int totalPages = total / 10;

//121%10 => 1 => 전체 페이지 수를 1 증가    [나머지 개념]	(전체 행 수 / 한 화면에 보여지는 size 했을 때 딱 떨어지지 않고 넘쳤을 때...)
//12페이지는 120행을 커버하는데 문제는 121행처럼 1행이 넘쳤을 때에는 13페이지로 처리해줘야 하므로..
if(total%10>0){
	totalPages++;
}
//현재 페이지를 5개로 나눈 나머지
int modVal = currentPage % 5 ;
//시작페이지 [이전] 1	2	3	4	5 [다음] ==> 1
int startPage = ((currentPage / 5) * 5) +1;	//1 / 5  = 0.2(int형이라 0)// 0* 5 = 0 // 0 + 1 = 1 
if(modVal == 0) startPage -= 5; //  보정작업
//종료페이지[이전] 1	2	3	4	5 [다음] ==> 5
int endPage = startPage + 4;
if(endPage > totalPages) endPage = totalPages;

int startNum = (currentPage *10) - 9;
int endNum = currentPage*10;


for(int i =startNum; i<=endNum; i++){ 
      out.write("	\r\n");
      out.write("		");
if(i>total){ 
		}else{
      out.write("\r\n");
      out.write("					\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>");
      out.print(i );
      out.write("</td>				\r\n");
      out.write("					<td>제목");
      out.print(i );
      out.write("</td>				\r\n");
      out.write("					<td>작성자");
      out.print(i );
      out.write("</td>				\r\n");
      out.write("					<td>0</td>				\r\n");
      out.write("				</tr>\r\n");
      out.write("	");
}
		}
      out.write("\r\n");
      out.write("				<tr style=\"text-align: center;\">\r\n");
      out.write("					<td colspan=\"4\" >\r\n");
      out.write("					");
if(startPage>5){
      out.write("\r\n");
      out.write("					<a href=\"/chapter07/freeboard.jsp?currentPage=");
      out.print(startPage-5 );
      out.write("\">[이전]</a>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					");
for(int j= startPage; j<=endPage; j++){ 
      out.write("\r\n");
      out.write("						<a href=\"/chapter07/freeboard.jsp?currentPage=");
      out.print((j));
      out.write("\">\r\n");
      out.write("					  		");
      out.print((j) );
      out.write("&nbsp;\r\n");
      out.write("					  	</a>\r\n");
      out.write("					 ");
} 
      out.write("\r\n");
      out.write("					 ");
if(endPage < totalPages) {
      out.write("\r\n");
      out.write("					 <a href=\"/chapter07/freeboard.jsp?currentPage=");
      out.print(startPage+5 );
      out.write("\">[다음]</a>\r\n");
      out.write("					 ");
} 
      out.write("\r\n");
      out.write("					 </td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
