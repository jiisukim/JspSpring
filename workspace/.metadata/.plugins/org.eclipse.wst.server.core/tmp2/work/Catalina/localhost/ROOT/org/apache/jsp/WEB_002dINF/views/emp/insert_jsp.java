/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.68
 * Generated at: 2021-09-13 04:51:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.emp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/dasuriProj/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1627018532952L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function fn_check(){\r\n");
      out.write("	//이름\r\n");
      out.write("	var v_nm = document.getElementById(\"nm\");\r\n");
      out.write("	//우편번호\r\n");
      out.write("	var v_addr1 = document.getElementById(\"addr1\");\r\n");
      out.write("	//주소\r\n");
      out.write("	var v_addr2 = document.getElementById(\"addr2\");\r\n");
      out.write("	//상세 주소\r\n");
      out.write("	var v_addr3 = document.getElementById(\"addr3\");\r\n");
      out.write("	//연락처\r\n");
      out.write("	var v_pne = document.getElementById(\"pne\");\r\n");
      out.write("	//월급\r\n");
      out.write("	var v_sal = document.getElementById(\"sal\");\r\n");
      out.write("	//isNaN : 자바스크립트 내장 함수.\r\n");
      out.write("	//숫자가 아닌 값이 있으면 true, 숫자만 있다면 false\r\n");
      out.write("	if(isNaN(v_sal.value)){//문자가 있으면 실행\r\n");
      out.write("		alert(\"월급은 숫자만 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	if(v_nm.value==\"\"){\r\n");
      out.write("		alert(\"이름을 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(v_addr1.value==\"\"){\r\n");
      out.write("		alert(\"우편번호를 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(v_addr2.value==\"\"){\r\n");
      out.write("		alert(\"주소를 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(v_addr3.value==\"\"){\r\n");
      out.write("		alert(\"상세 주소를 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(v_pne.value==\"\"){\r\n");
      out.write("		alert(\"연락처를 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if(v_sal.value==\"\"){\r\n");
      out.write("		alert(\"월급을 입력해주세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//EmpVO의 addr 속성을 위한 요소. \r\n");
      out.write("	var v_addr = document.getElementById(\"addr\");\r\n");
      out.write("	v_addr.value = v_addr1.value + \" \" +  v_addr2.value + \" \" + v_addr3.value;\r\n");
      out.write("	\r\n");
      out.write("	//submit함\r\n");
      out.write("	return true;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"card card-primary\" style=\"margin-top:5%;\">\r\n");
      out.write("              <div class=\"card-header\">\r\n");
      out.write("                <h3 class=\"card-title\">다수리 직원 등록</h3>\r\n");
      out.write("              </div>\r\n");
      out.write("              <!-- /.card-header -->\r\n");
      out.write("              <!-- form start -->\r\n");
      out.write("              <form method=\"post\" action=\"/emp/insert\" onsubmit=\"return fn_check()\">\r\n");
      out.write("              	<input type=\"hidden\" name=\"addr\" id=\"addr\" value=\"\" />\r\n");
      out.write("                <div class=\"card-body\">\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"nm\">이름</label>\r\n");
      out.write("                    <input type=\"text\" name=\"nm\" class=\"form-control\" id=\"nm\" placeholder=\"이름을 입력해주세요\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"addr1\">우편번호</label>\r\n");
      out.write("                    <input type=\"text\" name=\"addr1\" class=\"form-control\" id=\"addr1\" placeholder=\"우편번호 입력\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"addr2\">주소</label>\r\n");
      out.write("                    <input type=\"text\" name=\"addr2\" class=\"form-control\" id=\"addr2\" placeholder=\"주소 입력\">\r\n");
      out.write("                    <input type=\"text\" name=\"addr3\" class=\"form-control\" id=\"addr3\" placeholder=\"상세 주소 입력\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"pne\">연락처</label>\r\n");
      out.write("                    <input type=\"text\" name=\"pne\" class=\"form-control\" id=\"pne\"  placeholder=\"010-111-2222\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"sal\">월급</label>\r\n");
      out.write("                    <input type=\"text\" name=\"sal\" class=\"form-control\" id=\"sal\"  placeholder=\"숫자만 입력해주세요\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- /.card-body -->\r\n");
      out.write("\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <button type=\"submit\" class=\"btn btn-primary\">확인</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("                   onclick=\"javascript:location.href='/emp/list'\">취소</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
